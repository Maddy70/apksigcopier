name: CI
on: [push, pull_request, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10.0-alpha - 3.10'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update || sudo apt-get update
        # sudo apt-get upgrade -y
        sudo apt-get install -y apksigner zip
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8
    - name: Install
      run: make install
    - name: Test
      run: make test
    - name: Cache NewPipe Build
      uses: actions/cache@v2
      with:
        path: NewPipe/app/build/outputs/apk/release/app-release-unsigned.apk
        key: v0.20.11
    - name: Build & Test NewPipe
      run: |
        set -x
        # build APK
        if [ -e NewPipe/app/build/outputs/apk/release/app-release-unsigned.apk ]; then
          cd NewPipe/app/build/outputs/apk/release
        else
          git clone -b v0.20.11 https://github.com/TeamNewPipe/NewPipe.git
          cd NewPipe
          printf '\nandroid.useNewApkCreator=false\n' >> gradle.properties
          ./gradlew assembleRelease
          cd app/build/outputs/apk/release
        fi
        # copy APK
        cp app-release-unsigned.apk signed.apk
        cp app-release-unsigned.apk signed-v1.apk
        cp app-release-unsigned.apk signed-jarsigner.apk
        # generate dummy keystore & sign APKs
        apksigcopier gen-dummy ci-ks
        apksigner sign -v --ks ci-ks --ks-key-alias dummy \
          --ks-pass pass:dummy-password signed.apk
        apksigner sign -v --ks ci-ks --ks-key-alias dummy \
          --ks-pass pass:dummy-password \
          --v2-signing-enabled=false --v3-signing-enabled=false signed-v1.apk
        PASS=dummy-password jarsigner -keystore ci-ks -storepass:env PASS \
          -sigalg SHA256withRSA -digestalg SHA-256 signed-jarsigner.apk dummy
        # copy signatures
        mkdir meta
        apksigcopier extract signed.apk meta
        ls -hlA meta
        apksigcopier patch meta app-release-unsigned.apk patched.apk
        apksigcopier copy signed.apk app-release-unsigned.apk copied.apk
        apksigcopier copy --v1-only auto signed-v1.apk app-release-unsigned.apk copied-v1.apk
        apksigcopier copy --v1-only yes signed-jarsigner.apk app-release-unsigned.apk copied-jarsigner.apk
        # compare APKs
        sha512sum *.apk | sort
        cmp signed.apk patched.apk
        cmp signed.apk copied.apk
        cmp signed-v1.apk copied-v1.apk
        cmp signed-jarsigner.apk copied-jarsigner.apk || true
        # verify APKs
        apksigner verify -v --print-certs signed.apk
        apksigner verify -v --print-certs signed-v1.apk
        apksigner verify -v --print-certs signed-jarsigner.apk
        apksigner verify -v --print-certs patched.apk
        apksigner verify -v --print-certs copied.apk
        apksigner verify -v --print-certs copied-v1.apk
        apksigner verify -v --print-certs copied-jarsigner.apk
